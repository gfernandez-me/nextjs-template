---
alwaysApply: true
---

# Fribbels Epic 7 Optimizer Assets & Resources

## 1. Available Repository Resources

### GitHub Repository Structure

- **Main Repository**: [fribbels/Fribbels-Epic-7-Optimizer](https://github.com/fribbels/Fribbels-Epic-7-Optimizer)
- **License**: Generally open source, check specific asset licensing
- **Active Maintenance**: Last release v1.9.2 (September 2023)
- **Community**: 559 stars, 113 forks, active Discord server

### Key Directories from Repository

1. **app/**: Frontend React application
2. **backend/**: Backend Java optimization engine
3. **data/**: Game data and configuration files
4. **resources/**: Contains images and asset files
5. **configs/**: Configuration files for data structure

### Available Data Files

- **e7dbherodata.json**: Hero database with stats and information
- **testgear.json**: Sample gear data in Fribbels format
- **testgear.txt**: Export format example
- Various hero and artifact data files

## 2. Screenshot Examples from Repository

### Main Interface Screenshots

Based on the repository documentation, Fribbels provides:

- **Optimizer Interface**: Shows the gear optimization UI with stat filters
- **Gear Management**: Displays gear inventory and filtering options
- **Hero Management**: Hero selection and configuration screens
- **Import/Export**: Data import and export functionality

### UI Components Available

- **Dark Mode Interface**: Modern dark theme (default since v1.6.0)
- **Gear Cards**: Visual representation of equipment
- **Stat Displays**: Formatted stat presentations
- **Optimization Results**: Tabular results with color coding
- **Hero Portraits**: Character image integration

## 3. Related Community Tools

### Otherworldly Machinery

- **Purpose**: Unit build image generator for Epic 7
- **Repository**: [zaprocalypse/otherworldly-machinery](https://github.com/zaprocalypse/otherworldly-machinery)
- **Integration**: Uses Fribbels data format as input
- **Assets**: Contains processed hero and artifact images
- **Features**: Creates formatted build showcase images

### Community Asset Sources

- **Epic Seven DB API**: Provides hero images and data
- **Community Wikis**: Additional asset resources
- **Player Communities**: User-generated content and assets

## 4. Asset Categories

### Visual Assets We Can Reference

1. **UI Design Patterns**:

   - Color schemes (dark/light mode)
   - Layout structures
   - Component design approaches
   - Data visualization methods

2. **Data Structure Examples**:

   - JSON format examples
   - Database schema patterns
   - API response formats
   - Validation patterns

3. **Functionality Examples**:
   - Gear filtering interfaces
   - Optimization result displays
   - Import/export workflows
   - Hero management screens

### Assets We Cannot Directly Use

1. **Copyrighted Game Assets**:

   - Official Epic Seven character artwork
   - Game UI elements
   - Trademarked logos and graphics
   - Original game icons

2. **Third-Party Assets**:
   - Assets requiring specific attribution
   - Licensed images
   - Proprietary content

## 5. Safe Asset Usage Strategy

### Recommended Approach

1. **Unicode Emojis**: Use standard emojis for gear type icons

   - ‚öîÔ∏è Weapon
   - ü™ñ Helmet
   - üõ°Ô∏è Armor
   - üìø Necklace
   - üíç Ring
   - ü•æ Boots

2. **CSS-Based Icons**: Create simple CSS/SVG icons
3. **Open Source Alternatives**: Use CC0 or open license alternatives
4. **Custom Creations**: Design original icons inspired by functionality

### Attribution Requirements

- **Fribbels Optimizer**: Credit for data structures and formats
- **Community Tools**: Proper attribution for borrowed concepts
- **Open Source Libraries**: Follow respective licenses

## 6. Implementation Guidelines

### For Our Epic 7 Optimizer

#### UI/UX Inspiration

- **Clean Dark Theme**: Modern, eye-friendly design
- **Efficient Layouts**: Maximize information density
- **Color Coding**: Use color to convey information hierarchy
- **Responsive Design**: Works across device sizes

#### Data Visualization

- **Stat Comparisons**: Clear before/after displays
- **Filtering Options**: Comprehensive filter categories
- **Result Sorting**: Multiple sorting and ranking options
- **Progress Indicators**: User feedback during operations

#### User Experience Features

- **Auto-save**: Preserve user work automatically
- **Import/Export**: Seamless data exchange
- **Search Functions**: Quick gear and hero finding
- **Batch Operations**: Efficient bulk actions

## 7. Technical References

### Data Format Compatibility

```json
{
  "items": [...],
  "heroes": [...],
  "gear": {
    "type": "ring",
    "rank": "Epic",
    "set": "AttackSet",
    "mainStat": {...},
    "substats": [...]
  }
}
```

### API Pattern Examples

- **RESTful Endpoints**: Standard CRUD operations
- **Validation Layers**: Input sanitization and checking
- **Error Handling**: Graceful failure management
- **Performance Optimization**: Efficient data processing

### Database Schema Inspiration

- **Relational Design**: Proper foreign key relationships
- **Enum Usage**: Type-safe value constraints
- **Indexing Strategy**: Performance optimization
- **Migration Patterns**: Schema evolution management

## 8. Community Resources

### Discord Community

- **Fribbels Discord**: https://discord.gg/rDmB4Un7qg
- **Support**: User help and troubleshooting
- **Updates**: Version announcements
- **Feedback**: Feature requests and bug reports

### External APIs

- **Epic Seven DB**: Hero and artifact data
- **Community Wikis**: Game information
- **Reddit Communities**: Player discussions and guides

## 9. Development Best Practices

### Code Quality

- **TypeScript**: Type safety for complex data
- **Testing**: Comprehensive test coverage
- **Documentation**: Clear API and component docs
- **Linting**: Consistent code style

### Performance Considerations

- **Lazy Loading**: Load data on demand
- **Caching**: Reduce redundant calculations
- **Optimization**: Efficient algorithms
- **Memory Management**: Proper cleanup

### User Experience

- **Accessibility**: WCAG compliance
- **Mobile Support**: Responsive design
- **Loading States**: User feedback
- **Error Handling**: Helpful error messages

## 10. Legal and Ethical Considerations

### Intellectual Property

- **Game Content**: Respect Epic Seven copyrights
- **Community Assets**: Honor creator attribution
- **Open Source**: Follow license requirements
- **Fair Use**: Educational and utility purposes

### Community Ethics

- **Attribution**: Credit original creators
- **Collaboration**: Work with existing tools
- **Enhancement**: Add value, don't just copy
- **Support**: Contribute back to community

## 11. Future Enhancement Opportunities

### Potential Collaborations

- **Fribbels Integration**: API compatibility
- **Community Tools**: Cross-tool data sharing
- **Asset Sharing**: Community asset libraries
- **Standard Formats**: Common data structures

### Innovation Areas

- **Real-time Sync**: Live game data integration
- **AI Optimization**: Machine learning enhancements
- **Mobile Apps**: Native mobile experiences
- **Social Features**: Build sharing and rating

## 12. Implementation Roadmap

### Phase 1: Foundation

- ‚úÖ Basic data structures compatible with Fribbels
- ‚úÖ Unicode emoji icons for gear types
- ‚úÖ Dark theme UI following modern patterns
- üîÑ Import/export functionality

### Phase 2: Enhancement

- üîÑ Advanced filtering options
- üîÑ Optimization algorithms
- üîÑ User experience improvements
- üîÑ Performance optimization

### Phase 3: Community

- üìã API documentation
- üìã Community contribution guidelines
- üìã Plugin/extension support
- üìã Cross-tool compatibility

### Phase 4: Innovation

- üìã Real-time features
- üìã Advanced analytics
- üìã Mobile applications
- üìã Community marketplace

## 13. Resource Links

### Primary Sources

- [Fribbels Epic 7 Optimizer](https://github.com/fribbels/Fribbels-Epic-7-Optimizer)
- [Otherworldly Machinery](https://github.com/zaprocalypse/otherworldly-machinery)
- [Epic Seven Official](https://epic7.com)

### Community Resources

- [Epic Seven DB](https://epicsevendb.com)
- [Epic Seven Wiki](https://epicseven.fandom.com)
- [Reddit r/EpicSeven](https://reddit.com/r/EpicSeven)

### Development Tools

- [React Documentation](https://react.dev)
- [Next.js Framework](https://nextjs.org)
- [TypeScript Guide](https://typescriptlang.org)
- [Prisma ORM](https://prisma.io)
