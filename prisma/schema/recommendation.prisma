model GearPriorities {
  id             Int                  @id @default(autoincrement())
  userId         String
  name           String
  gearType       GearType?
  gearSetId      Int?
  mainStatType   MainStatType?
  prioritySub1Id Int?
  prioritySub2Id Int?
  prioritySub3Id Int?
  prioritySub4Id Int?
  heroIngameId   BigInt?
  heroName       String?
  isActive       Boolean              @default(true)
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  gearSet        GearSets?            @relation(fields: [gearSetId], references: [id])
  TargetHero     Heroes?              @relation(fields: [heroIngameId], references: [ingameId])
  PrioritySub1   StatTypes?           @relation("PrioritySub1", fields: [prioritySub1Id], references: [id])
  PrioritySub2   StatTypes?           @relation("PrioritySub2", fields: [prioritySub2Id], references: [id])
  PrioritySub3   StatTypes?           @relation("PrioritySub3", fields: [prioritySub3Id], references: [id])
  PrioritySub4   StatTypes?           @relation("PrioritySub4", fields: [prioritySub4Id], references: [id])
  User           User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  Heroes         GearPriorityHeroes[]

  @@unique([userId, name])
  @@index([userId])
  @@index([gearType])
  @@index([gearSetId])
  @@index([heroIngameId])
  @@map("gear_priorities")
}

model GearPriorityHeroes {
  id             Int            @id @default(autoincrement())
  gearPriorityId Int
  heroIngameId   BigInt
  GearPriority   GearPriorities @relation(fields: [gearPriorityId], references: [id], onDelete: Cascade)
  Hero           Heroes         @relation(fields: [heroIngameId], references: [ingameId], onDelete: Cascade)

  @@unique([gearPriorityId, heroIngameId])
  @@index([heroIngameId])
  @@map("gear_priority_heroes")
}

model GearRecommendation {
  id                     Int                      @id @default(autoincrement())
  userId                 String
  heroIngameId           BigInt
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
  GearRecommendationItem GearRecommendationItem[]
  Hero                   Heroes                   @relation(fields: [heroIngameId], references: [ingameId], onDelete: Cascade)
  User                   User                     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("gear_recommendations")
}

model GearRecommendationItem {
  id                   Int                @id @default(autoincrement())
  gearRecommendationId Int
  type                 GearType
  mainStatType         MainStatType
  statType1Id          Int
  statType2Id          Int?
  statType3Id          Int?
  statType4Id          Int?
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  GearRecommendation   GearRecommendation @relation(fields: [gearRecommendationId], references: [id], onDelete: Cascade)
  StatType1            StatTypes          @relation("StatType1", fields: [statType1Id], references: [id])
  StatType2            StatTypes?         @relation("StatType2", fields: [statType2Id], references: [id])
  StatType3            StatTypes?         @relation("StatType3", fields: [statType3Id], references: [id])
  StatType4            StatTypes?         @relation("StatType4", fields: [statType4Id], references: [id])

  @@map("gear_recommendation_items")
}
