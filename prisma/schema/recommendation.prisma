model GearRecommendation {
  id   Int    @id @default(autoincrement())
  name String

  heroId                 Int?
  Hero                   Heroes?                  @relation(fields: [heroId], references: [id], onDelete: Cascade)
  userId                 String
  User                   User                     @relation(fields: [userId], references: [id], onDelete: Cascade)
  GearRecommendationItem GearRecommendationItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("gear_recommendations")
}

model GearRecommendationItem {
  id           Int          @id @default(autoincrement())
  type         GearType
  mainStatType MainStatType

  gearRecommendationId Int
  GearRecommendation   GearRecommendation @relation(fields: [gearRecommendationId], references: [id], onDelete: Cascade)
  statType1Id          Int
  StatType1            StatTypes          @relation("StatType1", fields: [statType1Id], references: [id])
  statType2Id          Int?
  StatType2            StatTypes?         @relation("StatType2", fields: [statType2Id], references: [id])
  statType3Id          Int?
  StatType3            StatTypes?         @relation("StatType3", fields: [statType3Id], references: [id])
  statType4Id          Int?
  StatType4            StatTypes?         @relation("StatType4", fields: [statType4Id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("gear_recommendation_items")
}
